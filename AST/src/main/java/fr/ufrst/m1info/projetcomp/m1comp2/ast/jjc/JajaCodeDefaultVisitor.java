/* Generated By:JavaCC: Do not edit this line. JajaCodeDefaultVisitor.java Version 7.0.12 */
package fr.ufrst.m1info.projetcomp.m1comp2.ast.jjc;

import fr.ufrst.m1info.projetcomp.m1comp2.ast.mjj.VisitorException;

public class JajaCodeDefaultVisitor implements JajaCodeVisitor{
  public Object defaultVisit(SimpleNode node, Object data) throws VisitorException {
    node.childrenAccept(this, data);
    return data;
  }
  public Object visit(SimpleNode node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJajaCode node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCNil node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTInit node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTSwap node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTNew node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTNewArray node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTInvoke node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTReturn node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTWrite node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTWriteln node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTPush node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTPop node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTLoad node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTALoad node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTStore node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTAStore node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTIf node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTGoto node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTInc node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTAInc node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTNop node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCStop node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCIdent node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCType node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCSorte node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCVrai node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCFaux node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTNeg node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTNot node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTAdd node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTSub node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTMul node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTDiv node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTCmp node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTSup node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTInf node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTOr node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTAnd node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCNbre node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
  public Object visit(ASTJCString node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }

  @Override
  public Object visit(ASTLength node, Object data) throws VisitorException {
    return defaultVisit(node, data);
  }
}
/* JavaCC - OriginalChecksum=34a40b964a21b62f7f00aff48f99f1a9 (do not edit this line) */
